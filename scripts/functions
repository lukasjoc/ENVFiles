#!/bin/bash

runbrewstuff() {
  echo "Running brew update..."
  brew update
  brew upgrade
  echo "Running brew upgrade..."
  brew cask upgrade --greedy
  echo "Running brew cleanup..."
  rm -rf $(brew --cache)
  brew cleanup && brew doctor
  echo "Done ;)"
}

makeglobal() {
  if [ $# -eq 0 ]; then
    printf "%s\n" "Usage: makeglobal <current_name_with_extension> <target_name_without_extension>"
    return
  fi
  chmod u+x $1
  cp $1 $2
  mv $2 "/usr/local/bin"
}

cooldocker() {
	local ic=$(docker images -q | wc -l | sed 's/ //g' )
  local cc=$(docker container ls -q | wc -l | sed 's/ //g')
  local nc=$(docker network ls -q | wc -l | sed 's/ //g')
  local vc=$(docker volume ls -q | wc -l | sed 's/ //g')

	echo "Count:[$ic] | IMAGES:"
	docker images -a --digests && echo
  echo "Count: [$cc] | CONTAINER:"
  docker container ls -a && echo
  echo "Count: [$nc] | NETS:"
  docker network ls && echo
  echo "Count: [$vc] | VOLUMES:"
  docker volume ls && echo
}

killdocker() {
  docker stop $(docker container ls -aq)
  docker rm $(docker container ls -aq)
  docker volume prune -f
  docker network prune -f
  docker rmi $(docker images -aq)
}

# checks if $1 is installed. If not respond with error message. If $1 is installed
# return the type value of $1
tt() {
  if ! command -v $1 >/dev/null 2>&1; then
    echo "$1 is not installed :( "
    return
	else
		type $1
	fi
}

# just submit pre-tested solutions to exercism
# !!CAUTION: TESTING IS STILL ON YOU
exercism_submit() {
  if [ $# -eq 0 ]; then
    printf "%s\n" "Usage: exercism_submit <solution_file>"
    return
  fi
  if ! command -v exercism >/dev/null 2>&1; then
    echo "Exercism is not installed... "
    return
  fi
  exercism submit $1
}

# rename the current tmux pane given a name
mv_tmux() {
  if [ $# -eq 0 ]; then
    printf "%s\n" "Usage: mv_tmux <name>"
    return
  fi
	
	tmux rename-window -t $(tmux display-message -p '#I') $1
}

# Return the AVG PingTime in your current network for pinging a high frequented server at google
# or taking an URL as argument
pingtest(){
  if [ $# -ge 1 ]; then
    echo "Pinging $1 4 times..."
    ping -c 4 $1 | tail -1 | awk '{print $4}' | cut -d '/' -f 2
    return
  fi
  echo "Pinging 8.8.8.8 (dns.google.) 4 times..."
  ping -c 4 8.8.8.8 | tail -1 | awk '{print $4}' | cut -d '/' -f 2
  return
}

# System RAM Stats and stuff. Executing a base64 encoded program in $envm/bin/free
free() {
	local path_to_exec=$envm/bin/free
	base64 -D $path_to_exec | python
}

# create dir and cd into it
cddir () {
	mkdir -p $1
	cd $1
	return
}

# ask before deleteing
rmdir () {
	rm -rfi $1
}
