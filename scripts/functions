#!/bin/bash
# Defines just some essential functions.. Functions that are not used at least twice per week are being removed
set -u

# start jupyter_lab on specific dir
start_jupyter_lab(){ jupyter-lab "$HOME/fun/random/shit/ipynb" &> /dev/null & }

# sane defaults for vim users on linux or mac
ignore() {
	cat << EOM
*~
[._]*.sw[a-p]
.netrwhist
.DS_Store
tags
EOM
}

# print a current ISC License
license() {
	cat << EOM
Copyright $(date +'%Y') lukasjoc <jochamlu@gmail.com>

Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
EOM
}

# print a generic readme
readme() {
	cat << EOM
# $1

> $2

[https://lukasjoc.com](lukasjoc), $(date +'%Y')
EOM
}

# list docker info neatly and with color
cooldocker() {

	local ic nc vc cc

	cc=$(docker container ls -q | wc -l | sed 's/ //g')
	ic=$(docker images -q | wc -l | sed 's/ //g' )
	nc=$(docker network ls -f dangling=true -q | wc -l | sed 's/ //g')
	vc=$(docker volume ls -q | wc -l | sed 's/ //g')

	echo -e "\n[ \e[36m$cc\e[0m ] | CONTAINERS:"
	docker container ls | while read -r line; do

	if echo "$line" | grep -q "CONTAINER ID"; then
		echo -e "$line\t\tIP ADDRESS"
	else
		cid=$(echo "$line" | awk '{print $1}');
		cip=$(docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" "$cid");
		echo -e "${line}\t${cip}"
	fi
done; echo



echo -e "[ \e[36m$ic\e[0m ] | IMAGES:"
docker images -f dangling=false; echo

echo -e "[ \e[36m$nc\e[0m ] | NETS:"
docker network ls -f dangling=true; echo
if [ "$vc" -ge 1 ]; then
	echo -e "[ \e[36m$vc\e[0m ] | VOLUMES:"
	docker volume ls; echo
fi
}


# create readme, license file and git ignore even faster
setupfast() { license > LICENSE.txt; readme pogUchamp pogU, LUL > README.md; ignore > .gitignore; }

# maintaince script for arch systems
runarchstuff(){
	# update & upgrade
	echo "Updating/Upgrading arch/AUR repos..."
	yes | sudo pacman -Syyu
	yes | yay -Syuu

	# clean and remove/uninstall build deps that are not needed anymore
	echo "Cleaning the system..."
	yes | sudo pacman -R "$(pacman -Qdtq)"
	yes | yay -R "$(yay -Qdtq)"

	if command -v openbox > /dev/null 2>&1; then
		mmaker -f -t Alacritty
		openbox --reconfigure
	fi
}
