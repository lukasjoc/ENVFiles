#!/bin/bash
# Author: lukasjoc
# Desc: Defines just some essential functions.. Functions that are not used at least twice per week are being removed
set -u

# list docker info neatly and with color
cooldocker() {

	local ic nc vc cc

	cc=$(docker container ls -aq | wc -l | sed 's/ //g')
	echo -e "\n[ \e[36m$cc\e[0m ] | CONTAINERS:"
	docker container ls | while read -r line; do
		if echo "$line" | grep -q "CONTAINER ID"; then
	  	echo -e "$line\t IP ADDRESS"
		else
			cid=$(echo "$line" | awk '{print $1}');
			cip=$(docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" "$cid");
	  	echo -e "${line}\t${cip}\n\n"
	  fi
	done
	
	ic=$(docker images -q | wc -l | sed 's/ //g' )
	echo -e "[ \e[36m$ic\e[0m ] | IMAGES:"
	docker images && echo

	nc=$(docker network ls -q | wc -l | sed 's/ //g')
	echo -e "[ \e[36m$nc\e[0m ] | NETS:"
 	docker network ls && echo

	vc=$(docker volume ls -q | wc -l | sed 's/ //g')
	if [ "$vc" -ge 1 ]; then
		echo -e "[ \e[36m$vc\e[0m ] | VOLUMES:"
 		docker volume ls && echo
	fi

}

# stop, remove all containers, images, volumes, networks
killdocker() {
	docker stop "$(docker container ls -aq)"
	docker rm "$(docker container ls -aq)"
	docker volume prune -f
	docker network prune -f
	docker rmi "$(docker images -aq)"
}

# just submit pre-tested solutions to exercism
exercism_submit() {
  if [[ "$#" == "0" ]]; then
    printf "%s\n" "Usage: exercism_submit <solution_file>"
    return 1
  fi

	if ! command -v exercism >/dev/null 2>&1; then
    echo "Exercism is not installed... "
    return
  fi
  exercism submit "$@"
}

# Get Average ping time
pingtime(){
  if [[ "$#" -ge "1" ]]; then
    echo "Pinging $1 6 times..."
    ping -c 6 "$1" | tail -1 | awk '{print $4}' | cut -d '/' -f 2
    return 0
  fi

  echo "Pinging 8.8.8.8 (dns.google.) 6 times..."
  ping -c 6 8.8.8.8 | tail -1 | awk '{print $4}' | cut -d '/' -f 2
}

# start jupyter notebook in a certain dir to have it in a central place there
start_jupyter_lab() {
	cd "$ENVM_WDIR/ipynb/" || return 1
	jupyter-lab
}

# get an unlicense for any project ;) and make sure to > UNLICENSE
license() {
cat << EOM
													Simplified BSD License

Copyright (c) 2020, Lukas Jocham
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
EOM
}

# sane defaults for vim users on linux or mac
ignore() {
cat << EOM
# Swap
[._]*.s[a-v][a-z]
!*.svg  # comment out if you don't need vector files
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Session
Session.vim
Sessionx.vim

# Temporary
.netrwhist
*~
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~

# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

tags
EOM
}

