#!/bin/bash
# Provokes and defines some aliases and functions
set -u

alias ls="exa -F"
alias watchdir="watch -d ls -al"
alias ll="ls -alr"
alias ..="cd ../"
alias ...="cd ../../"
alias datef="date +'%d.%m.%y'"
alias python="python3"
alias pip="pip3"
alias rm="rm -i"
alias cp="cp -i"
alias mv="mv -i"
alias dc="docker-compose"
alias killdocker="docker system prune -a"  # be CAUTIONS with this!
alias :wq="exit"
alias vi="nvim"
alias vim="nvim"


# Check for system (MACOS specific stuff)
if [[ "$(uname -s)" == "Darwin" ]]; then
	alias locate_update="sudo /usr/libexec/locate.updatedb"

	# keep system up-to-date
	runbrewstuff() {
    # TODO: add cool spinner with percenteage
		echo "Update/Upgrade Brew Formulars..."
		brew update
		brew upgrade --greedy
		rm -rf "$(brew --cache)"
		brew cleanup
    brew doctor
		echo "Done ;)"
	}

  # install cask with new syntax and
  # keeping old habits bc install <something>
  bc() { brew "$1" "$2" --cask; }
fi

# reload $SHELL with -
ns() { exec "$SHELL" -l; }

# ls all global installed npm packages
npmls() { npm list -g --depth=0; }

# list all available scripts for package.json and composer.json
sc() {
	local file
	if [[ -f "$PWD/package.json" ]]; then
		file="package.json"
	else
		file="composer.json"
	fi
	jq .scripts "$file";
}

# working dir shortcuts
fun() { cd "$HOME/fun" || return; }

builds() { cd "$HOME/builds" || return; }

# golang stuff
# TODO: wriite a gocmd script that combines these also with more functionality
# like finding proper cleaning and creating of go mods and stuff
gobench() { go test -v --bench . --benchmem -race; }
goclean() { go clean -x -r -cache -modcache; }

# Taken from https://github.com/jessfraz/dotfiles/blob/main/.functions
# Thank you github.com/jessfraz
# Get colors in manual pages
man() {
  env \
		LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
		LESS_TERMCAP_md="$(printf '\e[1;31m')" \
		LESS_TERMCAP_me="$(printf '\e[0m')" \
		LESS_TERMCAP_se="$(printf '\e[0m')" \
		LESS_TERMCAP_so="$(printf '\e[1;44;33m')" \
		LESS_TERMCAP_ue="$(printf '\e[0m')" \
		LESS_TERMCAP_us="$(printf '\e[1;32m')" \
		man "$@"
}

